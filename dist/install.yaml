apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: warrior-operator
    control-plane: controller-manager
  name: warrior-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: warriors.warrior.k8s.gmem.ca
spec:
  group: warrior.k8s.gmem.ca
  names:
    kind: Warrior
    listKind: WarriorList
    plural: warriors
    singular: warrior
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Warrior is the Schema for the warriors API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: WarriorSpec defines the desired state of Warrior
            properties:
              downloader:
                type: string
              project:
                type: string
              resources:
                default:
                  cacheSize: 500Mi
                  limits:
                    cpu: "0"
                    memory: "0"
                  requests:
                    cpu: "0"
                    memory: "0"
                description: |-
                  WarriorResources defines the resource limits and requests that individual
                  warrior pods can use. The cacheSize (in-memory volume) can also be limited.
                properties:
                  cacheSize:
                    default: 500Mi
                    type: string
                  limits:
                    properties:
                      cpu:
                        default: "0"
                        type: string
                      memory:
                        default: "0"
                        type: string
                    required:
                    - cpu
                    - memory
                    type: object
                  requests:
                    properties:
                      cpu:
                        default: "0"
                        type: string
                      memory:
                        default: "0"
                        type: string
                    required:
                    - cpu
                    - memory
                    type: object
                required:
                - cacheSize
                - limits
                - requests
                type: object
              scaling:
                default:
                  concurrency: 5
                  maximum: 1
                properties:
                  concurrency:
                    default: 5
                    type: integer
                  maximum:
                    default: 0
                    type: integer
                  minimum:
                    default: 0
                    type: integer
                required:
                - concurrency
                - maximum
                type: object
            required:
            - project
            type: object
          status:
            description: WarriorStatus defines the observed state of Warrior
            properties:
              conditions:
                description: |-
                  INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: warrior-operator
  name: warrior-operator-controller-manager
  namespace: warrior-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: warrior-operator
  name: warrior-operator-leader-election-role
  namespace: warrior-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: warrior-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - warrior.k8s.gmem.ca
  resources:
  - warriors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - warrior.k8s.gmem.ca
  resources:
  - warriors/finalizers
  verbs:
  - update
- apiGroups:
  - warrior.k8s.gmem.ca
  resources:
  - warriors/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: warrior-operator-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: warrior-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: warrior-operator
  name: warrior-operator-warrior-editor-role
rules:
- apiGroups:
  - warrior.k8s.gmem.ca
  resources:
  - warriors
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - warrior.k8s.gmem.ca
  resources:
  - warriors/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: warrior-operator
  name: warrior-operator-warrior-viewer-role
rules:
- apiGroups:
  - warrior.k8s.gmem.ca
  resources:
  - warriors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - warrior.k8s.gmem.ca
  resources:
  - warriors/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: warrior-operator
  name: warrior-operator-leader-election-rolebinding
  namespace: warrior-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: warrior-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: warrior-operator-controller-manager
  namespace: warrior-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: warrior-operator
  name: warrior-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: warrior-operator-manager-role
subjects:
- kind: ServiceAccount
  name: warrior-operator-controller-manager
  namespace: warrior-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: warrior-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: warrior-operator-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: warrior-operator-controller-manager
  namespace: warrior-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: warrior-operator
    control-plane: controller-manager
  name: warrior-operator-controller-manager-metrics-service
  namespace: warrior-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: warrior-operator
    control-plane: controller-manager
  name: warrior-operator-controller-manager
  namespace: warrior-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-bind-address=:8443
        - --leader-elect
        - --health-probe-bind-address=:8081
        command:
        - /manager
        env:
        - name: WARRIOR_IMAGE_BASE
          value: atdr.meo.ws/archiveteam
        image: git.gmem.ca/arch/warrior-operator:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: warrior-operator-controller-manager
      terminationGracePeriodSeconds: 10
